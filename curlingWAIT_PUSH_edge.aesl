<!DOCTYPE aesl-source>
<network>


<!--list of global events-->


<!--list of constants-->
<constant value="0" name="TURN_LEFT"/>
<constant value="2" name="FORWARD"/>
<constant value="3" name="STOPPED"/>
<constant value="500" name="TARGET"/>
<constant value="400" name="THRESHOLD"/>
<constant value="1" name="TURN_RIGHT"/>
<constant value="4" name="TURN_RIGHT2"/>
<constant value="5" name="WAIT"/>
<constant value="6" name="BUMP"/>
<constant value="7" name="BACK"/>
<constant value="2000" name="THRESHOLD2"/>
<constant value="8" name="FORWARD1"/>
<constant value="150" name="EDGE_THRESHOLD"/>
<constant value="9" name="EDGE"/>


<!--show keywords state-->
<keywords flag="true"/>


<!--node thymio-II-->
<node nodeId="536" name="thymio-II">#delta - lower when sense black, high when sensing white
#this version waits 30ish seconds after positioning itself, then moves toward target

var bool =0
var state = STOPPED
timer.period[0] = 0
timer.period[1] = 0

#stops if back button pressed
onevent button.backward
	state = STOPPED
	motor.left.target = 0
	motor.right.target = 0
	timer.period[0] = 0
	
onevent button.forward
	call leds.circle(0,0,0,0,0,0,0,0)
	state = TURN_LEFT #starting state
	motor.left.target = TARGET/2
	motor.right.target = TARGET
	timer.period[0] = 1800
	timer.period[1] = 30000 #should set timer1 to 60 seconds

#if robot senses black tape OR target rings
onevent prox
	#if robot finds TAPE in beginning
	if state == TURN_LEFT and prox.ground.delta[0] &lt; THRESHOLD then
		state=TURN_RIGHT
		motor.left.target = TARGET
		motor.right.target = -TARGET
		timer.period[0] = 550
	
	#if robot reaches end of table	: turns right
	elseif	prox.ground.delta[1] &lt;EDGE_THRESHOLD or prox.ground.delta[0] &lt;EDGE_THRESHOLD then
		state=EDGE
		timer.period[0]= 3000
		motor.left.speed= -TARGET 
		motor.right.speed= -TARGET
	
	#if robot finds target, robot should stop
	elseif  state == FORWARD and prox.ground.delta[0] &lt; THRESHOLD or prox.ground.delta[1] &lt; THRESHOLD and (prox.ground.delta[1] >EDGE_THRESHOLD and prox.ground.delta[0] > EDGE_THRESHOLD) then
		state = STOPPED
		motor.left.target = 0
		motor.right.target = 0
		timer.period[0] = 0	
		
	#if robot sees another robot, ram it
	elseif state==FORWARD and prox.horizontal[2] >THRESHOLD2 then
		state=BUMP
		timer.period[0]=1200
		motor.left.target=TARGET
		motor.right.target=TARGET	
	end

#when timer looking for black tape runs out, robot will turn RIGHT, WAIT 30s, then move straight
onevent timer0
	timer.period[0]=0
	#should get robot to make sharp right turn (if robot does not find tape)
	if state == TURN_LEFT then
		state = TURN_RIGHT
		timer.period[0]=200
		motor.right.target=-TARGET
		motor.left.target=TARGET
		
	#moves forward after turn	
	elseif state==TURN_RIGHT then
		state=FORWARD1
		motor.left.target=TARGET
		motor.right.target=TARGET
		timer.period[0]=3500
		
	#wait after moving forward	
	elseif state==FORWARD1 then
		state=WAIT
		#timer.period[0]=2000
		motor.left.target=0
		motor.right.target=0
		
	#moves forward after waiting 10 seconds	
	elseif state==WAIT then
		state=FORWARD
		motor.left.speed=TARGET
		motor.right.speed=TARGET
		timer.period[0]=4000 #sets time to go forward before knows it is in wrong place
	
	elseif state==BACK or state==EDGE then
		state=FORWARD
		motor.left.target=TARGET
		motor.right.target=TARGET
		
	#after bumping robot, moves backward into original position	
		elseif state==BUMP then
		state=BACK
		timer.period[0]=1200
		motor.left.target=-TARGET
		motor.right.target=-TARGET
	end	
	
#when 1 minute timer is up, robot will stop	
onevent timer1
if bool==0 then
		timer.period[1]=30000
		bool=1
	else
		state = STOPPED
		call leds.circle(32,32,32,32,32,32,32,32)
		motor.left.target = 0
		motor.right.target = 0
		timer.period[0] = 0
		timer.period[1] = 0
	end
</node>


</network>
